; AddTwo.asm - adds two 32 - bit integers.
; Chapter 3 example

.386
.model flat, stdcall
.stack 4096
ExitProcess proto, dwExitCode:dword
INCLUDE Irvine32.inc

.data
user_Pin DWORD 5 dup(? )
MIN DWORD 5, 2, 4, 1, 3
MAX DWORD 9, 5, 8, 4, 6
prompt BYTE "Please enter you PIN: ", 0
p_error1 BYTE "INVALID NUMBER DETECTED IN PIN", 0
correct BYTE "The pin entered is valid", 10


.code
main proc
mov eax, 0
mov edx, 0
mov ecx, 0

; Setting up user pin, and pin validation
;
mov edx, OFFSET prompt							;move promt into edx for print
call WriteString								;printing prompt onto screen
call ReadString								;reading user input and storing it into eax
mov user_Pin, eax								;Move user input into label(user_Pin)
mov esi,user_Pin								;Moving user_Pin into esi
mov edi,MIN									;Moving MIN into edi
mov ecx,LENGTHOF user_Pin						;Setting up counter for loop

L1:
	cmp edi,esi								;Compare user_Pin to MIN
	jl E1									;Jump to E1 if user_Pin is less than
	inc edi									;Increment edi so it jumps to number to validate in MIN
	inc esi									;Increment esi so it jumps to next pin in user_Pin
	loop L1									;Loops to L1 till ecx is 0

mov esi,user_Pin								;Move user_Pin to esi again so now we validate it is within max range
mov edi,MAX									;Move Max number range to edi for validation
mov ecx,LENGTHOF user_Pin						;Setting up counter for loop

L2: 
	cmp esi,edi								;Compare user_Pin to MAX for validation
		jg E1								;Jump to E1 if greater
		inc edi								;Increment edi so it jumps to next max number
		inc esi								;Increment esi so it jumps to next number in user_Pin
		loop L2								;Loops L2 until ecx is 0

mov edx, OFFSET correct							;Moves prompt into edx for display
call WriteString								;Displays prompt onto screen
call WaitMsg									;Displays wait message
invoke ExitProcess,0							;Exits if everything is all valid






; Error Messages
E1 : mov edx, OFFSET p_error1						;Moves error prompt for display
call WriteString								;Displays error prompt




invoke ExitProcess, 0
main endp
end main
